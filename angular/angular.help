npm install -g @angular/cli     //install angular
ng v                            //show version

ng new firstApp                 // init project + y + scss
npm i                           // instala dependencias
ng serve                        // run serve


ng generate component padre     //create component

ng g c core/nav
ng g c pages/home

ng g i models/home              // only creates a folder with a .ts file

//! scripts
"start:open": "ng serve --open",


//! Cambios angular.json recomendables/optimos
//* para tenerlo más organizado creamos en src/ la carpeta /styles y añadimos styles.scss:
*Cambiar en apartados archuitect y test
"styles": [
    "src/styles/styles.scss"
],

//* modificamos el nombre/prefijo por defecto de los componentes al crearlos:
 "prefix": "ecom",

//! Para que Angular resuelva .json añadir esta linea en tsconfig.json
"resolveJsonModule": true,

//! creamos los modulos necesarios (se crea directamente dentro del directorio src/app, no hace falta estar dentro)
ng g m modules/Auth --routing
ng g m modules/History --routing
ng g m modules/Home --routing
ng g m modules/Tracks --routing
ng g m modules/Favorites --routing

//TODO para crear el mudulo en shared o bien lo creamos a mano o utilizamos el siguiente comando para que no genere subcarpetas:
//TODO en: src/app/
ng g m shared/shared --flat
//TODO creamos la carpeta components dentro de shared y los generamos:
ng g c shared/components/SideBar
ng g c shared/components/MediaPlayer
ng g c shared/components/HeaderUser

//! LAZY LOAD
//! that loads ngModules as needed. Lazy loading helps keep initial bundle sizes smaller, woch in turn helps
//! decreases load times.

//? Creamos un componente HomePage dentro de 'modules/home/pages' estas carpetas/directorios no existian, 
//? ahora ya existen ya que se generan al crear el componente.
ng g c modules/home/pages/HomePage

//! paths alias -> tsconfig.json
//TODO: en el archivo tsconfig.json podemos crear alias para los path para que no nos aparezca ../../../ 
//TODO: cuando importamos, a veces si el path es muy largo puede ser confuso o traer errores:
"module": "ES2022",
"paths": {
    "@core/*": [
        "src/app/core/*"
    ],
    "@modules/*": [
        "src/app/modules/*"
    ],
    "@shared/*": [
        "src/app/shared/*"
    ]
},


//! Creamos componentes dentro de los modulos que hemos creado antes () -> modules/moduleName/pages/moduleNamePage
ng g c modules/auth/pages/AuthPage
ng g c modules/history/pages/HistoryPage
ng g c modules/home/pages/HomePage <-- este lo hemos creado antes
ng g c modules/tracks/pages/TracksPage
ng g c modules/favorites/pages/FavoritesPage